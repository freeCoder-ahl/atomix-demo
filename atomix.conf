cluster {
  clusterId: atomix

  node {
    id: ${atomix.node.id}
    host: localhost
    port: 5003
  }

  discovery {
    type: bootstrap
    nodes.1 {
      id: atomix-1
      host: localhost
      port: 5001
    }
    nodes.2 {
      id: atomix-2
      host: localhost
      port: 5002
    }
    nodes.3 {
      id: atomix-3
      host: localhost
      port: 5003
    }
  }
}

# The `managementGroup` is a group of partitions used for managing primitives, configuration, and transactions.
# It must be configured on at least one discoverable node in the Atomix cluster.

# A management group using the Raft consensus protocol.
managementGroup {
  # The 'raft' type indicates that the Raft protocol should be used for replication.
  type: raft

  # The number of partitions indicates the number of distinct Raft clusters to use in the group.
  partitions: 1

  # The partition size is the number of nodes in each Raft partition. This should be an odd
  # number, typically 3, 5, or 7. The partition size must be less than the number of
  # 'members' in the group. The default value 0 sizes the partitions equal to the number
  # of 'members' in the group.
  partitionSize: 0

  # The 'members' is a list of member IDs for all members participating in the group.
  # Fixed member identifiers are necessary to preserve the safety of the Raft consensus algorithm.
  members: [atomix-1, atomix-2, atomix-3]

  # The 'storage' object configures how Raft partitions store data.
  storage {
    directory: ${atomix.data.path}/raft
    level: disk
    maxEntrySize: 1MB
    segmentSize: 2MB
    flushOnCommit: false
  }
}

partitionGroups.data {
  type: primary-backup
  partitions: 71
  memberGroupStrategy: node-aware
}
